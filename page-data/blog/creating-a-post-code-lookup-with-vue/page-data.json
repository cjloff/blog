{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/creating-a-post-code-lookup-with-vue/","result":{"data":{"site":{"siteMetadata":{"title":"Chester Loffman"}},"markdownRemark":{"id":"38adb1ce-7e09-598b-a63d-374e874fa1a4","excerpt":"For this tutorial we’re going to create a postcode look-up component using Vue.js that will allow the user to: Enter a postcode and search for a postal address…","html":"<h2>Introduction</h2>\n<p>For this tutorial we’re going to create a postcode look-up component using Vue.js that will allow the user to:</p>\n<ul>\n<li>Enter a postcode and search for a postal address (we will be using <a href=\"https://getaddress.io/\">https://getaddress.io/</a>).</li>\n<li>If a match is found show a list of relevant addresses in a dropdown.</li>\n<li>When the user selects a dropdown value it will auto populate the address fields.</li>\n</ul>\n<h2>Setting up parent view</h2>\n<p>First off we’re going to add a couple of address properties to the data object on the parent that will be updated when I use the postcode look-up component:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n    house<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\r\n    building<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\r\n    street<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\r\n    suburb<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\r\n    city<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>        </code></pre></div>\n<p>We’re also going to use <a href=\"https://vuejs.org/v2/guide/forms.html\" target=\"_blank\">v-model</a> on each one of the inputs in order to create a two way binding between the model above and the template below:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>fieldset<span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span>legend<span class=\"token operator\">></span>Your address<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>legend<span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>label <span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"house\"</span><span class=\"token operator\">></span>House<span class=\"token operator\">/</span>Flat Number<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>input id<span class=\"token operator\">=</span><span class=\"token string\">\"house\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"house\"</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"House/Flat Number\"</span><span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>label <span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"building\"</span><span class=\"token operator\">></span>Building<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>input id<span class=\"token operator\">=</span><span class=\"token string\">\"building\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"building\"</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Building\"</span><span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>label <span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"street\"</span><span class=\"token operator\">></span>Street<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>input id<span class=\"token operator\">=</span><span class=\"token string\">\"street\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"street\"</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Street\"</span><span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>label <span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"suburb\"</span><span class=\"token operator\">></span>Suburb<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>input id<span class=\"token operator\">=</span><span class=\"token string\">\"suburb\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"suburb\"</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Suburb\"</span><span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>label <span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"city\"</span><span class=\"token operator\">></span>City<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>input id<span class=\"token operator\">=</span><span class=\"token string\">\"city\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"city\"</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"City\"</span><span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>fieldset<span class=\"token operator\">></span></code></pre></div>\n<p>Now that we have our parent view set up, it’s time to set up our postcode look-up component.</p>\n<h2>Creating our PostCodeLookUp component</h2>\r\nNext up we're going to create a component called PostCodeLookUp, on this view we are going to add a few reactive properties:\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n        isSearching<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\r\n        postcode<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\r\n        addressList<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n        selectedAddress<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\r\n        postCodeSearched<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\r\n        noResults<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">postcode</code>: this is in order to keep track of the postcode that the user enters.</li>\n<li><code class=\"language-text\">addressList</code>: an empty array, this will be populated with a list of addresses and displayed in the dropdown after the user has searched a valid postcode.</li>\n<li><code class=\"language-text\">selectedAddress</code>: this will keep track of the the address that the user selects in the dropdown.</li>\n<li><code class=\"language-text\">postCodeSearched</code>: this boolean is used to conditionally show the dropdown after the user has searched a postcode (initially set to false).</li>\n<li><code class=\"language-text\">noResults</code>: boolean that will be used to show a error message if no results are returned from the api.</li>\n</ul>\n<h2>Creating the search</h2>\r\nIn terms of the template we are firstly going to create a text field bound to the postcode and a button that has a click event listener that fires off an addressLookUp function:\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token operator\">&lt;</span>fieldset<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>legend<span class=\"token operator\">></span>\r\n          Address Lookup\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>legend<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n          <span class=\"token operator\">&lt;</span>label <span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"postcodeLookup\"</span><span class=\"token operator\">></span>Enter postcode<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\r\n          <span class=\"token operator\">&lt;</span>input id<span class=\"token operator\">=</span><span class=\"token string\">\"postcodeLookup\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"postcode\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Enter postcode\"</span><span class=\"token operator\">></span>\r\n          <span class=\"token operator\">&lt;</span>button v<span class=\"token operator\">-</span>on<span class=\"token operator\">:</span>click<span class=\"token operator\">=</span><span class=\"token string\">\"addressLookUp\"</span><span class=\"token operator\">></span>Search Postcode<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>fieldset<span class=\"token operator\">></span></code></pre></div>\n<ul>\n<li>Firstly, we are going to create a function called <code class=\"language-text\">addressLookUp</code> and add it the methods object within our component.</li>\n<li>Within this function we are going to use <a href=\"https://www.npmjs.com/package/axios\" target=\"_blank\">axios</a> (a promise based HTTP client - I am importing it directly into the component using es6 modules) to make a request from the getAddress api with our postcode model value passed in.</li>\n<li>If there is a successful response we are going to bind our postcode list to the array of addresses returned from the response, and also set our postcodeSearched to true.</li>\n<li>If there are no results we will catch this error and return a message to the user.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token function\">addressLookUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://api.getAddress.io/find/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>postcode<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?api-key={api-key-here}</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\r\n          <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> \r\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>addressList <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>addresses\r\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>postCodeSearched <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\r\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>noResults <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\r\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n          <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>noResults <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\r\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Note:</strong> you will need to pass an <a href=\"https://getaddress.io/\" target=\"_blank\">api-key</a> into the URL above.</p>\n<h2>Displaying the results of the search</h2>\n<p>Now that we have a list of addresses returned, we need somewhere to display it:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token operator\">&lt;</span>fieldset v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"postCodeSearched\"</span><span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>legend<span class=\"token operator\">></span>Select your address<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>legend<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>select v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"selectedAddress\"</span> v<span class=\"token operator\">-</span>on<span class=\"token operator\">:</span>change<span class=\"token operator\">=</span><span class=\"token string\">\"emitAddress\"</span><span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">''</span> selected<span class=\"token operator\">></span>Please select<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>option <span class=\"token operator\">:</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"item\"</span> v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(item, index) in addressList\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"index\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>fieldset<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>p v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"noResults\"</span><span class=\"token operator\">></span>Sorry<span class=\"token punctuation\">,</span> we were unable to find that post<span class=\"token operator\">-</span>code<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></code></pre></div>\n<p>Let’s breakdown the above:</p>\n<ul>\n<li>We have set up a v-if and bound it to the postCodeSearched property, in the <code class=\"language-text\">addressLookUp</code> function we created above this will be set to true if a list of addresses is returned.</li>\n<li>We have bound the select to <code class=\"language-text\">selectedAddress</code> so that we can keep track of the currently selected address.</li>\n<li>We have used the v-for directive to display the list of addresses returned from the <code class=\"language-text\">addressLookUp</code> function within our select.</li>\n<li>If there are no results we return a helpful message</li>\n</ul>\n<p>Great, now we just need to update the address fields when the user selects an address in the dropdown.</p>\n<h2>Updating the address fields on our parent view</h2>\n<p>In the component above you will notice that I have attached a <code class=\"language-text\">emitAddress</code> function to the on change event of the select. This will <a href=\"https://vuejs.org/v2/guide/components-custom-events.html\" target=\"_blank\">emit</a> the <code class=\"language-text\">selectedAddress</code> property to the parent view the component sits on:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token function\">emitAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedAddress <span class=\"token operator\">!=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'addressChanged'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedAddress<span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now back on our parent view we want to firstly import our component:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> PostCodeLookUp <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/PostCodeLookUp'</span></code></pre></div>\n<p>And then register the component:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    PostCodeLookUp\r\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>On the component itself we are going to capture our custom event (<code class=\"language-text\">addressChanged</code>) that we emitted in the previous step and call a function that will update our address:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>post<span class=\"token operator\">-</span>code<span class=\"token operator\">-</span>look<span class=\"token operator\">-</span>up v<span class=\"token operator\">-</span>on<span class=\"token operator\">:</span>addressChanged<span class=\"token operator\">=</span><span class=\"token string\">\"updateAddress\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>post<span class=\"token operator\">-</span>code<span class=\"token operator\">-</span>look<span class=\"token operator\">-</span>up<span class=\"token operator\">></span></code></pre></div>\n<p>In terms of the function it will take the payLoad (in this case the <code class=\"language-text\">selectedAddress</code> from our component), splitting it and assigning parts of the address string to particular address fields:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">updateAddress</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">payLoad</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>   \r\n  <span class=\"token keyword\">let</span> addressArray <span class=\"token operator\">=</span> payLoad<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>house <span class=\"token operator\">=</span> addressArray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>building <span class=\"token operator\">=</span> addressArray<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>street <span class=\"token operator\">=</span> addressArray<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>suburb <span class=\"token operator\">=</span> addressArray<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>city <span class=\"token operator\">=</span> addressArray<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And there we have it, our component is now succesfully updating our address fields :)</p>\n<h2>Conclusion</h2>\n<p>We have succesfully created a post code look up component that utilizes several key Vue.js features including:</p>\n<ol>\n<li><code class=\"language-text\">v-model</code> to create two way binding for our address fields, postcode and selected address.</li>\n<li><code class=\"language-text\">v-if</code> directive to conditionally show particular parts of our template.</li>\n<li><code class=\"language-text\">v-for</code> directive for looping through our address list.</li>\n<li>Setting up event listeners using <code class=\"language-text\">v-on:change</code> and <code class=\"language-text\">v-on:click</code> and calling custom functions.</li>\n<li>Using axios to return data from an api endpoint.</li>\n<li>Emitting custom events from child to parent.</li>\n<li>Creating a isolated component that can be imported onto different parent views.</li>\n</ol>\n<p>All code used in this tutorial can be found on this <a href=\"https://github.com/cjloff/vue-post-code-look-up\" target=\"_blank\">demo</a>.</p>","frontmatter":{"title":"Creating a postcode lookup with Vue.js","date":"August 28, 2019","description":null}},"previous":{"fields":{"slug":"/blog/an-introduction-to-bem/"},"frontmatter":{"title":"An introduction to BEM"}},"next":{"fields":{"slug":"/blog/accessibility-tips/"},"frontmatter":{"title":"5 Accessibility Tips"}}},"pageContext":{"id":"38adb1ce-7e09-598b-a63d-374e874fa1a4","previousPostId":"7ee0517d-e1c2-5cca-b195-005b8f58558b","nextPostId":"f4fab84e-446d-5584-bf83-761b1f23d7ef"}},"staticQueryHashes":["2841359383"]}